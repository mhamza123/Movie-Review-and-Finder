{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const {\n    query\n  } = useParams();\n  const [movies, setMovies] = useState([]);\n  const {\n    error,\n    isPending,\n    data: moviesData\n  } = useFetch(`http://localhost:8000/movie?search=${query}`);\n  useEffect(() => {\n    if (moviesData) {\n      // Filter and sort movies based on relevance to the query\n      const filteredMovies = moviesData.filter(movie => {\n        const lowerCaseQuery = query.toLowerCase();\n        return movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) || movie.description && movie.description.toLowerCase().includes(lowerCaseQuery);\n      });\n\n      // Sort filtered movies based on relevance (you can customize this sorting logic)\n      const sortedMovies = filteredMovies.sort((a, b) => {\n        const relevanceA = calculateRelevance(a, query);\n        const relevanceB = calculateRelevance(b, query);\n        return relevanceB - relevanceA; // Sort in descending order of relevance\n      });\n\n      setMovies(sortedMovies);\n    }\n  }, [moviesData, query]);\n\n  // Calculate the relevance score for a movie based on the query (you can customize this calculation)\n  const calculateRelevance = (movie, query) => {\n    const lowerCaseQuery = query.toLowerCase();\n    const nameScore = movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) ? 1 : 0;\n    const descriptionScore = movie.description && movie.description.toLowerCase().includes(lowerCaseQuery) ? 0.5 : 0;\n    return nameScore + descriptionScore;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search Results for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + movie.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", movie.Description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release: \", movie.release]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Duration: \", movie.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"YCO9nHirdI0y+Xcvjn4CUsS6DtM=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useFetch","jsxDEV","_jsxDEV","Search","_s","query","movies","setMovies","error","isPending","data","moviesData","filteredMovies","filter","movie","lowerCaseQuery","toLowerCase","name","includes","description","sortedMovies","sort","a","b","relevanceA","calculateRelevance","relevanceB","nameScore","descriptionScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","to","id","src","process","env","PUBLIC_URL","img","Description","release","duration","_c","$RefreshReg$"],"sources":["/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst Search = () => {\n  const { query } = useParams();\n  const [movies, setMovies] = useState([]);\n  const { error, isPending, data: moviesData } = useFetch(`http://localhost:8000/movie?search=${query}`);\n\n  useEffect(() => {\n    if (moviesData) {\n      // Filter and sort movies based on relevance to the query\n      const filteredMovies = moviesData.filter(movie => {\n        const lowerCaseQuery = query.toLowerCase();\n        return (\n          movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) ||\n          movie.description && movie.description.toLowerCase().includes(lowerCaseQuery)\n        );\n      });\n\n      // Sort filtered movies based on relevance (you can customize this sorting logic)\n      const sortedMovies = filteredMovies.sort((a, b) => {\n        const relevanceA = calculateRelevance(a, query);\n        const relevanceB = calculateRelevance(b, query);\n        return relevanceB - relevanceA; // Sort in descending order of relevance\n      });\n\n      setMovies(sortedMovies);\n    }\n  }, [moviesData, query]);\n\n  // Calculate the relevance score for a movie based on the query (you can customize this calculation)\n  const calculateRelevance = (movie, query) => {\n    const lowerCaseQuery = query.toLowerCase();\n    const nameScore = movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) ? 1 : 0;\n    const descriptionScore = movie.description && movie.description.toLowerCase().includes(lowerCaseQuery) ? 0.5 : 0;\n    return nameScore + descriptionScore;\n  };\n\n  return (\n    <div className=\"home\">\n      <h2>Search Results for \"{query}\"</h2>\n      {isPending && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {movies.map(movie => (\n        <div key={movie.id}>\n          <div className=\"movie-preview\" key={movie.id} >\n          <div className=\"image\">\n          <Link to={`/movie/${movie.id}`}>\n            <img src={process.env.PUBLIC_URL + movie.img} />\n          </Link>\n          </div>\n          <div className=\"info\">\n\n            <Link to={`/movie/${movie.id}`}>\n                <h2>{ movie.name }</h2>\n            </Link>\n            <p>Description: { movie.Description }</p>\n            <p>Release: { movie.release }</p>\n            <p>Duration: { movie.duration }</p>\n          </div>\n        </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}