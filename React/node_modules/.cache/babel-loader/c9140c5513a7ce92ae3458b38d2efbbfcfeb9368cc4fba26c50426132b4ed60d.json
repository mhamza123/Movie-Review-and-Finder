{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Movie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  const {\n    error,\n    isPending,\n    data: movie\n  } = useFetch(`http://localhost:8000/movie/${id}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-preview\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + movie.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/movie/${movie.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", movie.Description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release: \", movie.release]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", movie.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Movie, \"f+Sz4mrdhK34a1LgPW+fKVQ94O4=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useFetch","jsxDEV","_jsxDEV","Movie","_s","id","error","isPending","data","movie","className","children","src","process","env","PUBLIC_URL","img","fileName","_jsxFileName","lineNumber","columnNumber","Link","to","name","Description","release","duration","_c","$RefreshReg$"],"sources":["/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Movie.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst Movie = () => {\n    let { id } = useParams();\n    const { error, isPending, data: movie } = useFetch(`http://localhost:8000/movie/${id}`);\n  \n    return (\n        <div className=\"movie-preview\" key={movie.id} >\n        <div className=\"image\">\n          <img src={process.env.PUBLIC_URL + movie.img} />\n        </div>\n        <div className=\"info\">\n\n          <Link to={`/movie/${movie.id}`}>\n              <h2>{ movie.name }</h2>\n          </Link>\n          <p>Description: { movie.Description }</p>\n          <p>Release: { movie.release }</p>\n          <p>Duration: { movie.duration }</p>\n        </div>\n      </div>\n    );\n}\n \nexport default Movie;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAI;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EACxB,MAAM;IAAEO,KAAK;IAAEC,SAAS;IAAEC,IAAI,EAAEC;EAAM,CAAC,GAAGT,QAAQ,CAAE,+BAA8BK,EAAG,EAAC,CAAC;EAEvF,oBACIH,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC9BT,OAAA;MAAKQ,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBT,OAAA;QAAKU,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGN,KAAK,CAACO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNlB,OAAA;MAAKQ,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAEnBT,OAAA,CAACmB,IAAI;QAACC,EAAE,EAAG,UAASb,KAAK,CAACJ,EAAG,EAAE;QAAAM,QAAA,eAC3BT,OAAA;UAAAS,QAAA,EAAMF,KAAK,CAACc;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACPlB,OAAA;QAAAS,QAAA,GAAG,eAAa,EAAEF,KAAK,CAACe,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzClB,OAAA;QAAAS,QAAA,GAAG,WAAS,EAAEF,KAAK,CAACgB,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjClB,OAAA;QAAAS,QAAA,GAAG,YAAU,EAAEF,KAAK,CAACiB,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,GAZ8BX,KAAK,CAACJ,EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAazC,CAAC;AAEZ,CAAC;AAAAhB,EAAA,CApBKD,KAAK;EAAA,QACMJ,SAAS,EACoBC,QAAQ;AAAA;AAAA2B,EAAA,GAFhDxB,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}