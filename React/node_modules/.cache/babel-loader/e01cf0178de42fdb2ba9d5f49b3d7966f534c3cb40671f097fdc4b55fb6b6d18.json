{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const {\n    query\n  } = useParams();\n  const [movies, setMovies] = useState([]);\n  const {\n    error,\n    isPending,\n    data: moviesData\n  } = useFetch(`http://localhost:8000/movie?search=${query}`);\n  useEffect(() => {\n    if (moviesData) {\n      // Filter and sort movies based on relevance to the query\n      const filteredMovies = moviesData.filter(movie => {\n        const lowerCaseQuery = query.toLowerCase();\n        return movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) || movie.description && movie.description.toLowerCase().includes(lowerCaseQuery);\n      });\n\n      // Sort filtered movies based on relevance (you can customize this sorting logic)\n      const sortedMovies = filteredMovies.sort((a, b) => {\n        const relevanceA = calculateRelevance(a, query);\n        const relevanceB = calculateRelevance(b, query);\n        return relevanceB - relevanceA; // Sort in descending order of relevance\n      });\n\n      setMovies(sortedMovies);\n    }\n  }, [moviesData, query]);\n\n  // Calculate the relevance score for a movie based on the query (you can customize this calculation)\n  const calculateRelevance = (movie, query) => {\n    const lowerCaseQuery = query.toLowerCase();\n    const nameScore = movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) ? 1 : 0;\n    const descriptionScore = movie.description && movie.description.toLowerCase().includes(lowerCaseQuery) ? 0.5 : 0;\n    return nameScore + descriptionScore;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        alignContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#efef83\"\n        },\n        children: [\"Search Results for \\\"\", query, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), movies.length === 0 && !isPending && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#efef83\"\n        },\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 47\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: process.env.PUBLIC_URL + movie.img,\n                alt: movie.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: movie.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", movie.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Release: \", movie.release]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Duration: \", movie.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"YCO9nHirdI0y+Xcvjn4CUsS6DtM=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useFetch","jsxDEV","_jsxDEV","Search","_s","query","movies","setMovies","error","isPending","data","moviesData","filteredMovies","filter","movie","lowerCaseQuery","toLowerCase","name","includes","description","sortedMovies","sort","a","b","relevanceA","calculateRelevance","relevanceB","nameScore","descriptionScore","className","children","style","display","alignContent","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","to","id","src","process","env","PUBLIC_URL","img","alt","release","duration","_c","$RefreshReg$"],"sources":["/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst Search = () => {\n  const { query } = useParams();\n  const [movies, setMovies] = useState([]);\n  const { error, isPending, data: moviesData } = useFetch(`http://localhost:8000/movie?search=${query}`);\n\n  useEffect(() => {\n    if (moviesData) {\n      // Filter and sort movies based on relevance to the query\n      const filteredMovies = moviesData.filter(movie => {\n        const lowerCaseQuery = query.toLowerCase();\n        return (\n          movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) ||\n          movie.description && movie.description.toLowerCase().includes(lowerCaseQuery)\n        );\n      });\n\n      // Sort filtered movies based on relevance (you can customize this sorting logic)\n      const sortedMovies = filteredMovies.sort((a, b) => {\n        const relevanceA = calculateRelevance(a, query);\n        const relevanceB = calculateRelevance(b, query);\n        return relevanceB - relevanceA; // Sort in descending order of relevance\n      });\n\n      setMovies(sortedMovies);\n    }\n  }, [moviesData, query]);\n\n  // Calculate the relevance score for a movie based on the query (you can customize this calculation)\n  const calculateRelevance = (movie, query) => {\n    const lowerCaseQuery = query.toLowerCase();\n    const nameScore = movie.name && movie.name.toLowerCase().includes(lowerCaseQuery) ? 1 : 0;\n    const descriptionScore = movie.description && movie.description.toLowerCase().includes(lowerCaseQuery) ? 0.5 : 0;\n    return nameScore + descriptionScore;\n  };\n\n  return (\n    <div className=\"home\">\n      <div style={{ display: \"grid\", alignContent: \"center\" }}>\n        <h2 style={{color: \"#efef83\"}}>Search Results for \"{query}\"</h2>\n        {isPending && <div>Loading...</div>}\n        {error && <div>{error}</div>}\n        {movies.length === 0 && !isPending && <p style={{color: \"#efef83\"}}>No Movies Found</p>}\n        {movies.map(movie => (\n          <div key={movie.id}>\n            <div className=\"movie-preview\" key={movie.id} >\n              <div className=\"image\">\n                <Link to={`/movie/${movie.id}`}>\n                  <img src={process.env.PUBLIC_URL + movie.img} alt={movie.name} />\n                </Link>\n              </div>\n              <div className=\"info\">\n                <Link to={`/movie/${movie.id}`}>\n                  <h2>{ movie.name }</h2>\n                </Link>\n                <p>Description: { movie.description }</p>\n                <p>Release: { movie.release }</p>\n                <p>Duration: { movie.duration }</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n  \n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}