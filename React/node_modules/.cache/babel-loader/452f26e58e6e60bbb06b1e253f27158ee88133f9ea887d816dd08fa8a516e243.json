{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../styles/Navbar.css\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  username,\n  onLogout\n}) => {\n  _s();\n  const firstLetter = username ? username.charAt(0).toUpperCase() : \"\";\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]); // State to store the list of movies\n  const [searchSuggestions, setSearchSuggestions] = useState([]);\n  const history = useHistory();\n  const {\n    error,\n    isPending,\n    data: moviesData\n  } = useFetch('http://localhost:8000/movie');\n  useEffect(() => {\n    if (moviesData) {\n      setMovies(moviesData);\n    }\n  }, [moviesData]);\n  const handleToggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const handleLogout = () => {\n    onLogout();\n    history.push('/login');\n  };\n  const handleSearch = e => {\n    setSearchQuery(e.target.value);\n    const query = e.target.value.toLowerCase();\n\n    // Filter the movies to find matching suggestions\n    const matchingSuggestions = movies.filter(movie => movie.name.toLowerCase().includes(query));\n    setSearchSuggestions(matchingSuggestions.map(movie => movie.name));\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hamburger\",\n      onClick: handleToggleMenu,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/hamburger.png\",\n          alt: \"Hamburger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Movies\",\n          value: searchQuery,\n          onChange: handleSearch,\n          list: \"searchSuggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"searchSuggestions\",\n          children: searchSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.push(`/search/${searchQuery}`),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/update-profile/${username}`,\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-circle\",\n        children: firstLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \" Logout \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"4bayFa6gfqWH5HoYJMd1QbCZZGg=\", false, function () {\n  return [useHistory, useFetch];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useFetch","jsxDEV","_jsxDEV","Navbar","username","onLogout","_s","firstLetter","charAt","toUpperCase","isMenuOpen","setIsMenuOpen","searchQuery","setSearchQuery","movies","setMovies","searchSuggestions","setSearchSuggestions","history","error","isPending","data","moviesData","handleToggleMenu","handleLogout","push","handleSearch","e","target","value","query","toLowerCase","matchingSuggestions","filter","movie","name","includes","map","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","list","id","suggestion","index","to","_c","$RefreshReg$"],"sources":["/home/tk-lpt-0602/Desktop/movie-app/movie-app/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../styles/Navbar.css\";\nimport useFetch from \"./useFetch\";\n\nconst Navbar = ({ username, onLogout }) => {\n  const firstLetter = username ? username.charAt(0).toUpperCase() : \"\";\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]); // State to store the list of movies\n  const [searchSuggestions, setSearchSuggestions] = useState([]);\n  const history = useHistory();\n\n  const { error, isPending, data: moviesData } = useFetch('http://localhost:8000/movie');\n\n  useEffect(() => {\n    if (moviesData) {\n      setMovies(moviesData);\n    }\n  }, [moviesData]);\n\n  const handleToggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleLogout = () => {\n    onLogout();\n    history.push('/login');\n  };\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value);\n    const query = e.target.value.toLowerCase();\n\n    // Filter the movies to find matching suggestions\n    const matchingSuggestions = movies.filter(movie =>\n      movie.name.toLowerCase().includes(query)\n    );\n\n    setSearchSuggestions(matchingSuggestions.map(movie => movie.name));\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"hamburger\" onClick={handleToggleMenu}>\n        <a><img src=\"/hamburger.png\" alt=\"Hamburger\" /></a>\n      </div>\n      {/* ... (previous code) */}\n      <div className=\"userinfo\">\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search Movies\"\n            value={searchQuery}\n            onChange={handleSearch}\n            list=\"searchSuggestions\"\n          />\n          <datalist id=\"searchSuggestions\">\n            {searchSuggestions.map((suggestion, index) => (\n              <option key={index} value={suggestion} />\n            ))}\n          </datalist>\n          <button onClick={() => history.push(`/search/${searchQuery}`)}>Search</button>\n        </div>\n        <Link to={`/update-profile/${username}`}>{username}</Link>\n        <div className=\"profile-circle\">{firstLetter}</div>\n        <button className=\"logout-btn\" onClick={handleLogout}> Logout </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,OAAO,sBAAsB;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAMC,WAAW,GAAGH,QAAQ,GAAGA,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,EAAE;EACpE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAMsB,OAAO,GAAGnB,UAAU,CAAC,CAAC;EAE5B,MAAM;IAAEoB,KAAK;IAAEC,SAAS;IAAEC,IAAI,EAAEC;EAAW,CAAC,GAAGtB,QAAQ,CAAC,6BAA6B,CAAC;EAEtFH,SAAS,CAAC,MAAM;IACd,IAAIyB,UAAU,EAAE;MACdP,SAAS,CAACO,UAAU,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BZ,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBnB,QAAQ,CAAC,CAAC;IACVa,OAAO,CAACO,IAAI,CAAC,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1Bd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9B,MAAMC,KAAK,GAAGH,CAAC,CAACC,MAAM,CAACC,KAAK,CAACE,WAAW,CAAC,CAAC;;IAE1C;IACA,MAAMC,mBAAmB,GAAGlB,MAAM,CAACmB,MAAM,CAACC,KAAK,IAC7CA,KAAK,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,KAAK,CACzC,CAAC;IAEDb,oBAAoB,CAACe,mBAAmB,CAACK,GAAG,CAACH,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC;EACpE,CAAC;EAED,oBACEjC,OAAA;IAAKoC,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBrC,OAAA;MAAKoC,SAAS,EAAC,WAAW;MAACE,OAAO,EAAEjB,gBAAiB;MAAAgB,QAAA,eACnDrC,OAAA;QAAAqC,QAAA,eAAGrC,OAAA;UAAKuC,GAAG,EAAC,gBAAgB;UAACC,GAAG,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEN5C,OAAA;MAAKoC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBrC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UACE6C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,eAAe;UAC3BnB,KAAK,EAAEjB,WAAY;UACnBqC,QAAQ,EAAEvB,YAAa;UACvBwB,IAAI,EAAC;QAAmB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACF5C,OAAA;UAAUiD,EAAE,EAAC,mBAAmB;UAAAZ,QAAA,EAC7BvB,iBAAiB,CAACqB,GAAG,CAAC,CAACe,UAAU,EAAEC,KAAK,kBACvCnD,OAAA;YAAoB2B,KAAK,EAAEuB;UAAW,GAAzBC,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsB,CACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACX5C,OAAA;UAAQsC,OAAO,EAAEA,CAAA,KAAMtB,OAAO,CAACO,IAAI,CAAE,WAAUb,WAAY,EAAC,CAAE;UAAA2B,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACN5C,OAAA,CAACJ,IAAI;QAACwD,EAAE,EAAG,mBAAkBlD,QAAS,EAAE;QAAAmC,QAAA,EAAEnC;MAAQ;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1D5C,OAAA;QAAKoC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEhC;MAAW;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnD5C,OAAA;QAAQoC,SAAS,EAAC,YAAY;QAACE,OAAO,EAAEhB,YAAa;QAAAe,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CAjEIH,MAAM;EAAA,QAMMJ,UAAU,EAEqBC,QAAQ;AAAA;AAAAuD,EAAA,GARnDpD,MAAM;AAmEZ,eAAeA,MAAM;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}